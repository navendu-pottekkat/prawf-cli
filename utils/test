package utils

import (
	"log"

	v "github.com/spf13/viper"
)

const (
	ConfigName = "prawf"
	ConfigType = "json"
)

type PrawfConfig struct {
	Tests       []Test `json:"tests"`
	CurrentTest string `json:"current-test"`
}

type Test struct {
	URL     string   `json:"url"`
	Methods []Method `json:"methods"`
}

type Method struct {
	Path   string                 `json:"path"`
	Method string                 `json:"method"`
	Query  map[string]interface{} `json:"query,omitempty"`
	Body   map[string]interface{} `json:"body,omitempty"`
}

type Config struct {
	Test        string `json:"test"`
	CurrentTest string `json:"current"`
}

var templateMethods = []Method{
	{
		Path:   "/user",
		Method: "GET",
	},
	{
		Path:   "/user",
		Method: "POST",
	},
}

var templateTest = Test{
	URL:     "http://localhost:9090",
	Methods: templateMethods,
}

func GetPrawfConfig(configName string, configPath string) (*Config, error) {

	v.SetConfigName(configName)
	v.SetConfigType(ConfigType)
	v.AddConfigPath(configPath)

	err := v.ReadInConfig()
	if err != nil {
		log.Fatal(err)
	}

	c := &Config{}

	err = v.Unmarshal(&c)
	if err != nil {
		return nil, err
	}
	return c, err
}
















/*
Copyright Â© 2021 Navendu Pottekkat <navendupottekkat@gmail.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.
*/
package cmd

import (
	"fmt"
	"log"

	"github.com/spf13/cobra"
)

var (
	configPath string
	configName string
)

// createCmd represents the init command
var createCmd = &cobra.Command{
	Use:   "create",
	Short: "Create prawf.json file",
	Long: `Create and initialise prawf.json file in the current working directory.

The file will be initialised with default values.`,
	Run: func(cmd *cobra.Command, args []string) {
		fmt.Println("init called")
	},
}

func init() {
	// cp, err := utils.GetDir()
	// if err != nil {
	// 	log.Fatal(err)
	// }

	log.Print("Inside init")

	// createCmd.Flags().StringVarP(&configPath, "path", "p", cp, "path to create the prawf.json file")
	// createCmd.Flags().StringVarP(&configName, "name", "n", utils.ConfigName, "name of the config file")

	// createConfig(configPath, configName)
}

// func createConfig(cp string, cn string) {
// 	conf := utils.GetConf(cp, cn)

// 	fmt.Printf("Hostname: %v\n", conf.Hostname)
// 	fmt.Printf("Port: %v\n", conf.Port)
// }

